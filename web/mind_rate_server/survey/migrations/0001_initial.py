# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-13 17:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submit_date_time', models.DateTimeField(null=True, verbose_name=b'Submit Date and Time')),
                ('question_id', models.IntegerField(null=True, verbose_name=b'Question ID')),
                ('question_type', models.CharField(max_length=30, verbose_name=b'Question Type')),
                ('text_value', models.TextField(blank=True, verbose_name=b'Answer of Text Question')),
                ('choice_value', models.CharField(max_length=30, verbose_name=b'Answer of Choice Question')),
                ('integer_value', models.FloatField(verbose_name=b'Answer of Scale Question')),
            ],
        ),
        migrations.CreateModel(
            name='ChoiceQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(max_length=30, verbose_name=b'Question Type')),
                ('question_content', models.TextField(verbose_name=b'Question Content')),
                ('option', models.TextField(verbose_name=b'Option')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NotAnsweredQuestionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal_information_name', models.CharField(max_length=30)),
                ('string_value', models.CharField(max_length=30)),
                ('integer_value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Proband',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Questionnaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('questionnaire_name', models.CharField(max_length=30, verbose_name=b'Questionnaire Name')),
                ('max_show_up_times_per_day', models.IntegerField(null=True, verbose_name=b'Max Show Up Times Per Day')),
            ],
        ),
        migrations.CreateModel(
            name='ScaleQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(max_length=30, verbose_name=b'Question Type')),
                ('question_content', models.TextField(verbose_name=b'Question Content')),
                ('min_value', models.FloatField(verbose_name=b'Minimum')),
                ('max_value', models.FloatField(verbose_name=b'Maximum')),
                ('gap_value', models.FloatField(verbose_name=b'Gap')),
                ('questionnaire_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Questionnaire')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Study',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study_name', models.CharField(max_length=30, verbose_name=b'Study Name')),
                ('start_date_time', models.DateTimeField(verbose_name=b'Start Date and Time')),
                ('end_date_time', models.DateTimeField(verbose_name=b'End Date and Time')),
            ],
        ),
        migrations.CreateModel(
            name='StudyDirector',
            fields=[
                ('mail_address', models.EmailField(max_length=50, primary_key=True, serialize=False, verbose_name=b'Email-Address')),
                ('titel', models.CharField(max_length=20, verbose_name=b'Titel')),
                ('_passwort', models.CharField(max_length=20, verbose_name=b'Passwort')),
            ],
        ),
        migrations.CreateModel(
            name='TextQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_type', models.CharField(max_length=30, verbose_name=b'Question Type')),
                ('question_content', models.TextField(verbose_name=b'Question Content')),
                ('questionnaire_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Questionnaire')),
                ('study_director_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.StudyDirector')),
                ('study_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Study')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TriggerEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(b'Acc', b'Accelerometer'), (b'Li_Acc', b'Linear Acceleration'), (b'Grav', b'Gravity'), (b'Rota', b'Rotation Vector'), (b'Tem', b'Temperature'), (b'Light', b'Light'), (b'Pres', b'Pressure'), (b'Hum', b'Relative Humidity'), (b'Mag', b'Magnetic Field'), (b'Prox', b'Proximity')], max_length=10, verbose_name=b'Trigger Event Name')),
                ('value', models.CharField(max_length=50, verbose_name=b'Value')),
                ('questionnaire_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Questionnaire')),
            ],
        ),
        migrations.AddField(
            model_name='study',
            name='study_director_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.StudyDirector'),
        ),
        migrations.AddField(
            model_name='scalequestion',
            name='study_director_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.StudyDirector'),
        ),
        migrations.AddField(
            model_name='scalequestion',
            name='study_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Study'),
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='study_director_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.StudyDirector'),
        ),
        migrations.AddField(
            model_name='questionnaire',
            name='study_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Study'),
        ),
        migrations.AddField(
            model_name='proband',
            name='study_director_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.StudyDirector'),
        ),
        migrations.AddField(
            model_name='proband',
            name='study_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Study'),
        ),
        migrations.AddField(
            model_name='personalinformation',
            name='proband_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Proband'),
        ),
        migrations.AddField(
            model_name='notansweredquestionnaire',
            name='proband_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Proband'),
        ),
        migrations.AddField(
            model_name='notansweredquestionnaire',
            name='questionnaire_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Questionnaire'),
        ),
        migrations.AddField(
            model_name='choicequestion',
            name='questionnaire_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Questionnaire'),
        ),
        migrations.AddField(
            model_name='choicequestion',
            name='study_director_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.StudyDirector'),
        ),
        migrations.AddField(
            model_name='choicequestion',
            name='study_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Study'),
        ),
        migrations.AddField(
            model_name='answer',
            name='proband_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='survey.Proband'),
        ),
    ]
